/**
 * This script must be placed in the HEAD above all external stylesheet declarations
 * (link[rel=stylesheet])
 * It contains logic for grouping our second stage font loadings into
 * a single repaint and reflow using CSS Font Loading API
 * @preserve
 */
(e=>{var o,f,r,a,n=(o=>{for(var f,r=e.document.getElementsByTagName("meta"),a=0;a<r.length;a++)if(r[a].name&&r[a].name==o){f=r[a];break}return f})("fontsDir");n=null!=n?n.content:"/fonts","fonts"in document&&(a=new FontFace("FK Display","url("+n+"/FKDisplay-Regular.woff2) format('woff2'), url("+n+"/FKDisplay-Regular.woff) format('woff')"),o=new FontFace("Source Sans Pro","url("+n+"/SourceSansPro-Regular.woff2) format('woff2'), url("+n+"/SourceSansPro-Regular.woff) format('woff')"),f=new FontFace("Source Sans Pro","url("+n+"/SourceSansPro-Italic.woff2) format('woff2'), url("+n+"/SourceSansPro-Italic.woff) format('woff')",{style:"italic"}),r=new FontFace("Source Sans Pro","url("+n+"/SourceSansPro-SemiBold.woff2) format('woff2'), url("+n+"/SourceSansPro-SemiBold.woff) format('woff')",{weight:"600"}),Promise.all([a.load(),o.load(),f.load(),r.load()]).then(function(o){o.forEach(function(o){document.fonts.add(o)})})),!("fonts"in document)&&"querySelector"in document&&((a=document.createElement("style")).innerHTML="@font-face { font-family: 'FK Display'; src: url("+n+"/FKDisplay-Regular.woff2) format('woff2'), url("+n+"/FKDisplay-Regular.woff) format('woff'); }@font-face { font-family: 'Source Sans Pro'; src: url("+n+"/SourceSansPro-Regular.woff2) format('woff2'), url("+n+"/SourceSansPro-Regular.woff) format('woff'); }@font-face { font-family: 'Source Sans Pro'; src: url("+n+"/SourceSansPro-Italic.woff2) format('woff2'), url("+n+"/SourceSansPro-Italic.woff) format('woff'); font-style: italic; }@font-face { font-family: 'Source Sans Pro'; src: url("+n+"/SourceSansPro-SemiBold.woff2) format('woff2'), url("+n+"/SourceSansPro-SemiBold.woff) format('woff'); font-weight: 600; }",document.head.appendChild(a))})(this);